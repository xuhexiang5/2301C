let const 没有变量提升  const 声明常量 可以修改引用数据类型不能修改简单数据类型
var 存在变量提升
变量：只会提升声明，不会提升赋值  
函数：只会提升声明，不会提升调用
先提升function 后提升var
同一作用域内，无法对同一个变量/常量进行重复声明。
var可以重复声明

块级作用域存在暂时性死区： 使用let和const命令声明变量之前，该变量都是不可用的，语法上被称为暂时性死区。

作用域链
函数执行时，现在内部找这个变量如果找不到向上层找直到找到全局作用域或者undefined
这就是作用域链

作用域
指一个变量的作用范围
在ES6之前，只有全局作用域和函数作用域，在ES6中，新增了块级作用域

结构赋值
数组：解构时不能用字符串，通过下标来结构
对象：按照属性来解构，可以更换属性名

箭头函数：
箭头函数没有原型prototype 还有 this 的指向问题，即不能用作为构造函数
没有伪数组在ES5function里有伪数组
箭头函数没有this, this指向定义箭头函数得父级
箭头函数只能声明成**匿名函数**，但可以通过表达式的方式让箭头函数具名

模板字符串：
用一对反引号（`模板字符串`）标识，
在模板字符串中可以嵌入变量 ，js表达式或函数等 ，变量，js表达式或函数需要写在${}中

展开运算符（...）：
将字符串转成数组
let arr='123'
const Arr=[...arr]//['1','2','3']
合并数组
const arr1=[1,2,3]
const arr2=[3,4,5]
const arr3=[...arr1,...arr2]
得arr[1,2,3,4,5,6]

